# CMakeList.txt : CMake project for CMakeTest, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

# Add source to this project's executable.
add_library (Rendering
	"window.h"
	"window.cpp"
	"include/api.h"
	"api.cpp"
	"d3dx12.h"
	"dxDevice.h"
	"dxDevice.cpp"
	"dxVertexShader.h"
	"dxVertexShader.cpp"
	"dxPixelShader.h"
	"dxPixelShader.cpp"
	"dxHeap.h"
	"dxHeap.cpp"
	"dxFence.h"
	"dxFence.cpp"
	"dxFenceEvent.h"
	"dxFenceEvent.cpp"
	"dxBuffer.h"
	"dxBuffer.cpp"
	"CL/dxDisplayWorlyCL.h"
	"dxCommandQueue.h"
	"dxCommandQueue.cpp"
	"dxSwapChain.h"
	"dxSwapChain.cpp"
	"dxDescriptorHeap.h"
	"dxDescriptorHeap.cpp"
	"dxComputeShader.h"
	"dxComputeShader.cpp"
	"dxComputeCommandQueue.h"
	"dxComputeCommandQueue.cpp"
	"dxTexture.h"
	"dxTexture.cpp"
	"dxCopyCL.h"
	"dxCopyCL.cpp"
	"clouds/dxWorlyTextureComputeCL.h"
	"clouds/dxWorlyTextureComputeCL.cpp"
	"CL/dxDisplayWorlyCL.h"
	"CL/dxDisplayWorlyCL.cpp"
	"threadPool.h"
	"threadPool.cpp"
	"CL/dxRender3DCL.cpp"
	"CL/dxRender3DCL.h"
	"dxCopyCommandQueue.h"
	"dxCopyCommandQueue.cpp"
	"deferred/dxLitMatCL.h"
	"deferred/dxLitMatCL.cpp"
	"raymarching/dxRayMarchCamera.h"
	"helper/dxCamera.cpp"
	"primitives/cube.h"
	"primitives/cube.cpp"
	"CL/dxPlainCL.h"
	"CL/dxPlainCL.cpp"
	"deferred/gBuffer.h"
	"deferred/gBuffer.cpp"
	"deferred/dxLitPassCL.h"
	"deferred/dxLitPassCL.cpp"
	"helper/inputHandler.h"
	"clouds/cloudSettingsReader.h"
	"clouds/cloudSettingsReader.cpp"
	"materials/dxUnlitMatCL.cpp"
	"CL/dxClearRTCL.h"
	"CL/dxClearRTCL.cpp"
	"clouds/dxCloudsCamera.h"
	"clouds/dxCloudsCamera.cpp"
	"noise/dxCanvasMatCL.h"
	"noise/dxCanvasMatCL.cpp"
	"raymarching/dxRayMarchMatCL.h"
	"raymarching/dxRayMarchMatCL.cpp"
	"raymarching/dxRayMarchCamera.h"
	"raymarching/dxRayMarchCamera.cpp"
	"scene/dxMesh.h"
	"scene/dxMesh.cpp"
	"scene/dxMeshRepo.h"
	"scene/dxMeshRepo.cpp"
	"scene/dxScene.h"
	"scene/dxScene.cpp"
	"dxRenderer.h"
	"dxRenderer.cpp"
	"IRenderStage.h"
	"renderstage/dxClearRTRS.h"
	"renderstage/dxClearRTRS.cpp"
	"materials/dxMaterialRepo.h"
	"materials/dxMaterialRepo.cpp"
	"materials/IMaterial.h"
	"materials/dxSimpleUnlitMat.h"
	"materials/dxSimpleUnlitMat.cpp"
	"scene/IScene.h"
	"scene/IMeshRepo.h"
	"materials/IMaterialRepo.h"
	"renderstage/dxUnlitPass.h"
	"renderstage/dxUnlitPass.cpp"
	"renderstage/dxClearDSRS.h"
	"renderstage/dxClearDSRS.cpp"
	"materials/dxCloudMat.h"
	"materials/dxCloudMat.cpp"
	"renderstage/dxCloudPass.h"
	"renderstage/dxCloudPass.cpp"
 )

target_include_directories(Rendering INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_include_directories(Rendering PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_include_directories(Rendering PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")

target_link_libraries(Rendering PUBLIC GC)
target_link_libraries(Rendering PRIVATE "d3d12.lib" "dxgi.lib" "d3dcompiler.lib" "dxguid.lib")

add_definitions(-D_AFXDLL)
set(CMAKE_MFC_FLAG 1)

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET Rendering PROPERTY CXX_STANDARD 20)
endif()
